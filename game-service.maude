mod SERVICE is
	inc CONFIGURATION .
	inc QID .
  pr NAT .

	sorts Key Value .
	subsort Qid < Key .
  subsorts Qid Msg < Value .

  sorts GAME GAMESet .
  subsorts Oid < GAME < GAMESet .  

  ops A B : -> Oid [ctor] .

  op empty : -> GAMESet [ctor] .
  op _;_ : GAMESet GAMESet -> GAMESet [ctor assoc comm id: empty] .

  op Service : -> Cid [ctor] .

  op Game    :     -> Cid [ctor] .
  op id :_   : Nat -> Attribute [ctor gather (&)] .
  op name :_ : Qid -> Attribute [ctor gather (&)] .  

  op _send_:_ : Oid Oid Msg -> Msg . ***Example: send A : (get K)
  op _receive_ : Oid Msg -> Msg .
  op get_ : Nat -> Msg .
  op put__ : Nat Qid -> Msg .
  op post__ : Nat Qid -> Msg .
  op delete_ : Nat -> Msg .
endm

mod GAME-SERVICE is ---service B
	ex SERVICE .

  op games :_ : GAMESet -> Attribute [ctor gather(&)] .
  op put_in_ : GAME GAMESet -> GAMESet .
  op _in_ : GAME GAMESet -> Bool . ***based on id, NOT name

  vars C C' : Configuration .
  var GM    : GAME .
  var GS    : GAMESet .
  vars G G' S : Oid .
  var I     : Nat .
  var N N'    : Qid .

  ---(
  eq put GM in empty = GM .
  eq put (< G : Game | id : I , name : N >) in < G' : Game | id : I , name : N' > ; GS = < G : Game | id : I , name : N > ; GS .
  eq put GM in GS = GM ; GS .

  eq GM in empty = false .
  eq (< G : Game | id : I , name : N >) in (< G' : Game | id : I , name : N' > ; GS) = true .
  )---

  rl [GET] :
      < G : Game | id : I , name : N >
      < B : Service | games : GS ; G >
      (S send B : get I)
    =>
      < B : Service | games : GS ; G >
      S receive G .

  rl [PUT] :
      < G : Game | id : I , name : N >
      < B : Service | games : GS >
      (S send B : put G)
    =>
      < B : Service | games : put G in GS > .

  crl [POST] :
      < G : Game | id : I , name : N >
      < B : Service | games : GS >
      (S send B : post G)
    =>
      < B : Service | games : put G in GS >
    if
      not (GM in GS) .

  rl [DELETE] :
      < G : Game | id : I , name : N >
      < B : Service | games : GS ; G >
      (S send B : delete I)
    =>
      < B : Service | games : GS > .
endm

mod INTERFACE is ---service A
  ex SERVICE .
 
  var I   : Nat .
  var N   : Qid .
  var G S : Oid .

  rl [GET] :
    get I => (A send B : get I) .

  rl [PUT] :
    put G => (A send B : put G) .

  rl [RECEIVE] :
    S receive < G : Game | id : I , name : N > => N .
endm

---(
Service B -- gets request from user, sends message to Service A to perform request
Service A -- has a game DB, can read and write from/to DB
)---